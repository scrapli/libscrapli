---
name: build

on:
  workflow_call: {}
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: load env vars for workflow run
        run: |
          source .github/vars.env
          echo "ZIG_VERSION=$ZIG_VERSION" >> "$GITHUB_ENV"

      - name: setup zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}

      # never got around to figuring out how to ensure the openssl generate step runs *once* even
      # when being built against all the targets, so this is a quick/easy hack to ensure that :)
      - name: ensure openssl generate step cached
        run: |
          zig build
        working-directory: lib/openssl

      - name: build the examples
        run: |
          make build-examples

      - name: build the library and ffi layer
        run: |
          make build

  build-builder-image:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build builder image
        run: |
          docker build -f build/builder.Dockerfile build/ -t ghcr.io/scrapli/libscrapli/builder:dev-latest

      - name: push builder (dev) image to ghcr
        run: |
          docker push ghcr.io/scrapli/libscrapli/builder:dev-latest
